---
// Importa supabase
import { supabase } from '../../lib/supabase.js';
//import { articulo } from '@pages/preambulares/index.astro';

// Función getStaticPaths para definir las rutas dinámicas
export async function getStaticPaths() {
  let { data: articulo, error } = await supabase
   .from('articulo')
   .select('id')
   .filter('categoria', 'eq', 'Cuestiones preambulares')
   .order('id', { ascending: true });

  if (error) {
    console.error(error);
    return [];
  }

  // Convierte los IDs de los artículos en un array de objetos con params
  const paths = articulo ? articulo.map((articulo) => ({
    params: { id: String(articulo.id) },
  })) : [];

  return { paths, fallback: false };
}

// Función getStaticProps para obtener los datos del artículo específico
export async function getStaticProps({ params }: { params: { id: string } }) {
  let { data: articulo, error } = await supabase
   .from('articulo')
   .select('*')
   .eq('id', params.id)
   .single();

  if (error) {
    console.error(error);
    return { props: {} };
  }

  return { props: { articulo } };
}

interface Articulo {
  id: number;
  titulo: string;
  categoria: string;
  contenido: string;
  indice: string[];
}

// Extrae el articulo de Astro.props
const { articulo } = Astro.props as { articulo: Articulo };

---

<article>
  <h1>{articulo.titulo}</h1>
  <h2>{articulo.categoria}</h2>
  <p>{articulo.contenido}</p>
  <h3>Índice</h3>
  <ol>
    {articulo.indice.map((item: string, index: number) => (
      <li id={`item-${index}`}>{item}</li>
    ))}
  </ol>
</article>